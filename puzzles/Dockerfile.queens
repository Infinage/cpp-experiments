# ---- Builder Stage ----
FROM alpine:latest AS builder

# Install build dependencies
RUN apk add --no-cache g++ opencv-dev asio-dev wget unzip cmake make git

# Download and install Crow
WORKDIR /home/deps
RUN wget -O crow.zip https://github.com/CrowCpp/Crow/archive/refs/tags/v1.2.1.2.zip && \
    unzip crow.zip && cd Crow-1.2.1.2 && \
    mkdir build && cd build && \
    cmake -DCROW_BUILD_EXAMPLES=OFF -DCROW_BUILD_TESTS=OFF .. && \
    cmake --build . --parallel && cmake --install .

# Copy source code
WORKDIR /home/app
COPY queens.cpp .

# Compile
RUN g++ queens.cpp -o queens -std=c++23 -I/usr/include/opencv4 \
    -lopencv_core -lopencv_imgcodecs -lopencv_imgproc \
    -Wno-deprecated-enum-enum-conversion

# Copy dynamic libraries
RUN mkdir lib && \
    ldd queens | awk '{for(i=1;i<=NF;i++) if ($i ~ /^\//) print $i}' \
    | sort -u | xargs -I{} cp {} lib/

# ---- Final Image ----
FROM alpine:latest

# Copy executable and its needed libraries
WORKDIR /home/app
COPY --from=builder /home/app/queens .
COPY --from=builder /home/app/lib ./lib

# Expose internal port
EXPOSE 8080

# Run the app
CMD ["sh", "-c", "LD_LIBRARY_PATH=./lib ./queens"]
